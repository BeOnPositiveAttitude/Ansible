# Ansible плейбуки могут быть очень похожими, код используемый в одном плейбуке может быть полезен для использования в другом плейбуке
# Чтобы сделать легкий для переиспользования код, могут быть использованы роли. Роль - это коллекция tasks, переменных, файлов, шаблонов и других ресурсов упорядоченных в структуру директорий таким образом, чтобы легко включить их в плейбук
# роли должны быть написаны в общем виде, так особенности конкретного play могут быть определены как переменные на уровне этого play и эти переменные перезапишут дефолтные переменные, которые заданы в роли
# использование ролей делает работу с большими проектами более управляемой

# структура директрий Ansible роли:
# defaults - содержит дефолтные значение переменных роли. Если переменные заданы на уровне play, значения этих дефолтных переменных будут перезаписаны
# files - может содержать статические файлы, необходимые для tasks роли
# handlers - содержит файл main.yml, который определяет handlers используемые в роли
# meta - содержит файл main.yml, который может быть использован для включения в роль метаданных, таких как информация об авторе, лицензии, зависимостях и др.
# tasks - содержит файл main.yml, который определяет tasks роли
# templates - используется для хранения Jinja2 шаблонов
# tests - может содержать опциональный файл инвентаря, а также например test.yml плейбук для тестирования роли
# vars - может содержать файл main.yml со стандартными переменными для роли (эти переменные не предназначены для перезаписи переменными плейбука)

# переменные могут быть определены на различных уровнях роли
# vars/main.yml содержит дефолтные переменные роли, которые используются для функционирования роли по умолчанию. Они не предназначены для перезаписи
# defaults/main.yml может содержать дефолтные переменные. Они имеют низкий приоритет и могут быть перезаписаны переменными с аналогичными именами, которые заданые в плейбуке и которые соответственно имеют более высокий приоритет
# переменные заданные в плейбуке всегда перезаписывают переменные заданные в роли. Специфические переменные, как например секреты и зашифрованные данные всегда должны управляться из плейбука, а переменные роли предназначены для общего использования
# переменные роли определяются в плейбуке во время вызова роли и имеют наивысший приоритет и перезаписывают переменные плейбука также как и переменные инвентаря

# роли могут быть получены разными путями:
# вы можете написать свою собственную роль
# для RHEL доступен пакет rhel-system-roles
# роли созданные сообществом доступы через Ansible Galaxy веб-сайт

# роли могут храниться в default location и отсюда легко могут быть использваны в плейбуках
# ./roles в папке с проектом имеет наивысший приоритет
# ~/.ansible/roles проверяется далее
# /etc/ansible/roles проверяется далее
# /usr/share/ansible/roles проверяется далее

# роли вызываются из плейбука
# когда используются роли, они запускаются до выполнения любой task, которая определена в плейбуке

---
- name: role demo
  hosts: all
  roles:
    - role
    - role2

# когда вызвается роль, переменные роли могут быть определены:
---
- name: role variable demo
  hosts: all
  roles:
    - role: role1
    - role: role2
      var1: cow
      var2: goat

# смотреть путь куда устанавливаются роли в системе: `ansible-config dump | grep ROLE`

