# если плейбук становится большим, существует общая практика использовать модульность с помощью includes и imports
# includes и imports могут выполняться в плейбуках также как и таски
# include - динамический процесс; Ansible обрабатывает содержимое included-файлов в момент, когда доcтигнет этого импорта
# import - статический процесс; Ansible предварительно обрабатывает импортированное содержимое файла перед тем как начнется выполнение play
# импорты плейбука должны быть определены в начале плейбука, используя import_playbook
# обычно используют include, а не import

# task-файл - это плоский список тасок
# используйте import_tasks для статического импорта task-файла в плейбук, он будет включен (included) в месте, в котором импортирован
# используйте include_tasks для динамического включения task-файла
# динамическое включение тасок означает, что некоторые фичи будут недоступны:
ansible-playbook --list-tasks   #не покажет таски
ansible-playbook --start-at-task   #не сработает
# вы не сможете вызвать handler, указанный в импортированном task-файле из главного task-файла
# best practice: хранить task-файлы в выделенной директории для более простого управления

# когда включать task-файлы:
# тогда когда требуется модульность, например для разделения между группами тасок, которые небходимо выполнять на определенных типах хостов
# когда разные группы IT персонала отвечают за разные задачи установки
# если таску необходимо выполнять только в определенных случаях

# использование переменных для внешних plays и tasks:
# рекомендуется хранить include-файлы как можно более общими (generic)
# определяйте переменные отдельно от плейбука:
# - в отдельных include файлах
# - используя group_vars и host_vars
# - или используя local facts
# это позволяет вам обрабатывать различные переменные для разных групп хостов, используя при этом один и тот же плейбук
