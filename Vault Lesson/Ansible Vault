ansible-vault create palybook.yml   #создать новый плейбук с шифрованием
# команда запросит ввод пароля и далее откроется редактор vi для редактирования файла
ansible-vault create --vault-password-file=vault-pass palybook.yml   #зашифровать плейбук с помощью файла с паролем, выставить права 600 на этот файл
ansible-vault view palybook.yml   #просмотреть зашифрованный плейбук
ansible-vault edit palybook.yml   #редактировать зашифрованный плейбук
ansible-vault encrypt palybook.yml   #зашифровать существующий плейбук
ansible-vault decrypt palybook.yml   #расшифровать плейбук
ansible-vault rekey   #изменить пароль для существующего плейбука
# для запуска плейбука содержащего шифрованные данные нужно использовать опцию --ask-vault-pass
# или же использовать опцию --vault-password-file ~./vault-pass.txt
# или можно передать скрипт на Python --vault-password-file ~./vault-pass.py, который будет "дергать" пароль из какого-либо источника (БД, вызов к API и т.д.)
# чтобы не указывать каждый раз руками, путь до vault-password-file можно прописать в ansible.cfg:
vault_password_file = /home/thor/playbooks/vault_pass.txt
# для запуска плейбука содержащего шифрованные данные нужно использовать опцию --vault-id @prompt для ввода пароля
# для того чтобы хранить переменные относящиеся к хостам или группам хостов нужно создать структуру:
| -groups_vars
|  | --db_servers
|    |- vars
|    |- vault


echo -n "d3v3l0p3r" | ansible-vault encrypt_string   #зашифровать строку в кавычках
ansible-vault encrypt_string   #зашифровать строку